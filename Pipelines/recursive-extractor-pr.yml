# Azure Pipelines
# https://aka.ms/yaml

name: RecursiveExtractor_PR_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr:
  branches:
    include:
    - main

resources:
  repositories:
    - repository: templates
      type: git
      name: SecurityEngineering/OSS-Tools-Pipeline-Templates
      ref: refs/tags/v1.1.1
      
variables:
  BuildConfiguration: 'Release'
  DotnetVersion: '8.0.x'

stages:
- stage: TestPoolDefinition
  dependsOn: []
  jobs:
    - job: sign_hash_release
      displayName: Code Sign, Generate Hashes, Publish Public Releases
      pool:
        name: 'CSPA'
        demands: ImageOverride -equals win2022-image-base
      steps:
      - task: UseDotNet@2 # For ESRP. Do not use variable.
        inputs:
          packageType: 'sdk'
          version: '6.0.x'

- stage: TestPoolDefinition2
  dependsOn: []
  jobs:
    - job: sign_hash_release
      displayName: Code Sign, Generate Hashes, Publish Public Releases
      pool:
        name: 'CSPA'
        vmImage: win2022-image-base
      steps:
      - task: UseDotNet@2 # For ESRP. Do not use variable.
        inputs:
          packageType: 'sdk'
          version: '6.0.x'

- stage: Test
  dependsOn: []
  jobs:
  - template: dotnet-test-job.yml@templates
    parameters:
      jobName: 'lib_dotnet_test_windows'
      dotnetVersions: ['6.0.x','7.0.x','8.0.x']
      vmImage: 'win2022-image-base'
      projectPath: 'RecursiveExtractor.Tests/RecursiveExtractor.Tests.csproj'
  - template: dotnet-test-job.yml@templates
    parameters:
      jobName: 'cli_dotnet_test_windows'
      dotnetVersions: ['6.0.x','7.0.x','8.0.x']
      vmImage: 'win2022-image-base'
      projectPath: 'RecursiveExtractor.Cli.Tests/RecursiveExtractor.Cli.Tests.csproj'

- stage: SDL
  dependsOn: []
  jobs:
  - template: sdl-job.yml@templates
    parameters:
      preScan:
      - template: policheck-exclusion-steps.yml@templates
        parameters:
          ExcludeFolderPathStart: 'RecursiveExtractor.Tests'
      policheckExclusionFile: $(Build.SourcesDirectory)/PolicheckExclusions.xml

- stage: Build
  dependsOn:
  - Test
  jobs:
  - template: nuget-build-job.yml@templates
    parameters:
      jobName: 'pack_lib'
      buildConfiguration: ${{ variables.BuildConfiguration }}
      dotnetVersion: ${{ variables.DotnetVersion }}
      projectPath: 'RecursiveExtractor/RecursiveExtractor.csproj'
      projectName: 'RecursiveExtractor'
      customPackFlags: '/p:ContinuousIntegrationBuild=true'
      preBuild:
      - template: nbgv-set-version-steps.yml@templates
  - template: nuget-build-job.yml@templates
    parameters:
      jobName: 'pack_cli'
      buildConfiguration: ${{ variables.BuildConfiguration }}
      dotnetVersion: ${{ variables.DotnetVersion }}
      projectPath: 'RecursiveExtractor.Cli/RecursiveExtractor.Cli.csproj'
      projectName: 'RecursiveExtractor_CLI'
      customPackFlags: '/p:ContinuousIntegrationBuild=true'
      preBuild:
      - template: nbgv-set-version-steps.yml@templates
